Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-09-06T12:02:31+09:00

====== 05-3 Call by value ======
Created 목요일 06 9월 2018

[ ] **Counter.java   // java파일에 두개의 클래스가 들어있다 (보통은 하나만 들어있고 여러개의 클래스 선언도 가능하다. )**

class Updater {
	public void update(__int__ count) {   // 매개변수로 primitive  데이터를 받았다.  프리미티브 타입은 참조형이 아니기때문에 리터럴값을 받는다 . 아래에서 0을 전달받았다. 
		count++;				// 0이 증가하여 1이 되었으나 리턴값이 없다. 
	}
}

public class Counter {
	int count = 0;  // 객체변수             						//primitive 데이터 
	public static void main(String[] args) {        				
		Counter myCounter = new Counter();					//객체 myCounetr를 생성한다.        
		System.out.println("before update:"+myCounter.count);		//객체 myCounter는 참조형이기 때문에 주소로 찾아가서 count를 가져온다. 
		Updater myUpdater = new Updater();					//객체 myUpdater를 생성한다. 
		myUpdater.update(myCounter.count);					//객체 myUpdater는 참조형이기 때문에 주소로 찾아가서 update메소드에 myCounter의 count를 넣어준다.	
													  // 이때 myCount의 count는 int로 primitive 타입이다.
		System.out.println("after update:"+myCounter.count);		// myCounter의 주소로 가서 counter 값을 가져온다. 0이 출력된다. 

	}
}


--------------------
[ ] **Counter.java  // 클래스 업데이터의 업데이트가 받는 매개변수의 타입을 Reperence 타입으로 수정한 파**
