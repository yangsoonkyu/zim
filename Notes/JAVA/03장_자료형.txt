Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-09-05T22:22:22+09:00

====== 03장 자료형 ======
Created 수요일 05 9월 2018

===== ㅇ 프리미티브타입과 레퍼런스타입 =====
Java Data Type
ㄴ **Primitive** Type
	ㄴ Boolean Type(__boolean__)
	ㄴ Numeric Type
		ㄴ Integral Type
			ㄴ Integer Type(__short, int, long, byte__)
			ㄴ Floating Point Type(__float, double__)
		ㄴ Character Type(__char__)
ㄴ **Reference** Type
	ㄴ Class Type
	ㄴ Interface Type
	ㄴ __Array__ Type
	ㄴ Enum Type
	ㄴ etc.

ㅇ 사용되는 바이트의 크기 기본자료형
1바이트(8bit, 2^8 -128~127)										byte				(바뀌지 않는 자료를 저장할때)
2바이트(16bit, 2^16 -32768~32768)									short, char
4바이트(32bit, 2^32 -2147483648 ~ 2147483647)							int, float  			(컴퓨터는 intger에 최적화되어 있어서 가장 빠르고 가장많이 쓴다. )
8바이트(64bit, 2^64 -9223372036854775808 ~ 9223372036854775807)			long, double


===== ㅇ 숫자 primitive Type =====
​
	**정수**
		__int:__ 32비트 ( -2147483648 ~ 2147483647)
		__long:__ 64비트 (-9223372036854775808 ~ 9223372036854775807)
		
		다음과 같이 사용한다.
		int age = 10;
		long countOfStar = 8764827384923849L;    	* 뒤에 접미사로 대문자L을 꼭 붙인다.
​
	**실수(소수표현)**
		__float__ pi = 3.14F;  *뒤에 접미사F를 붙인다 안붙이면 기본값이 double임
		__double__ morePi = 3.14159265358979323846;
		
	**8진수와 16진수**
		int octal = 023;    // 십진수: 19  //0(숫자 '0')으로 시작하면 8진수
		int hex = 0xC;     // 십진수: 12  //알파벳 'x')로 시작하면 16진수
​
		
	**숫자연산** : +, -, *, / 기호를 이용하여 두 숫자간 사칙연산을 수행한다
	**증감연산** :++, -- 기호를 이용하여 값을 증가하거나 감소시킬 수 있다. ++i 값이 먼저증가, i++ 참조된 후 증가
​
​

===== ㅇ 문자(char) : 한개의 문자값에 대한 자료형 ex) char a1 = 'a'; // 단일부호 ' 로 감싸준다. =====

===== ㅇ Boolean primitive Type =====
​
	**부울 연산**
		__boolean__ isSuccess = true;
		boolean isTest = false;
		* true, false 소문자로 표현한다.
​
	**조건문**
		int base = 180;
		int height = 185;
		boolean isTall = height > base;
​
		if (isTall) {
			System.out.println("키가 큽니다.");
		}
​
	

===== ㅇ 문자열(String) Reperence Type  객체이지만 리터럴값으로 표현할수 있다. =====
​
	primitive : primitive 자료형은 new 키워드로 생성할 수 없다.
	
	__equals__			a.equals(c)				a와c의 값을 비교한다. //==은 타입까지 비교한다 //true,false
	__indexOf__			a.indexOf("Java")			a에서 Java의 인덱스번호를 찾아서반환
	__replaceAll__			a.replaceAll("Java", "World")	a의 Java를 world로 바꿔줌
	__substring__			a.substring(0, 4)			a의 인덱스번호 0부터 4번앞까지 반환
	__toUpperCase__		a.toUpperCase()			a의 모든 문자를 대문자로 바꿔준다.
​

		

===== ㅇ StringBuffer Reperence Type 문자의 변경이나 추가가 많을때 사용한다. =====
​
	__append__ 			sb.append("hello");			문자열을 더할때	
	__insert__				sb.insert(0, "hello ");		0번 인덱스에 문자열을 넣는다	
	__substring__			sb.substring(0, 4)			0번 인덱스부터 4번앞에까지 가져온다.
	
​

===== ㅇ 배열(Array) Reperence Type 길이가 고정되어 잇고 인덱스값으로 접근할수 있다.배열은 값을 바꿀수 없다. (리스트 사용) =====
	int[] odds = {1, 3, 5, 7, 9};
	String[] weeks = {"월", "화", "수", "목", "금", "토", "일"};
	
	String[] weeks = new String[7];  // 길이값이 없으면 컴파일 에러가 발생한다. // []안에 숫자 꼭 넣기
	weeks[0] = "월";
	weeks[1] = "화";
	weeks[2] = "수";
	weeks[3] = "목";
	weeks[4] = "금";
	weeks[5] = "토";
	weeks[6] = "일";
	
	weeks.__length__ 	배열의 길이
	weeks[2]  	2번 인덱스의 값
​
​
​

===== ㅇ 제네릭스 ***객체에 포함되는 자료의 타입도 표시하도록 한다. =====
	ArrayList<String> aList = new ArrayList<String>();
​
​

===== ㅇ 리스트(List) Reperenct Type (ArrayList, LinkedList 등이 있다) 배열과 비슷하다. =====
	ArrayList<String> pitches = new ArrayList<String>();
	
	
	__add__			pitches.add("138");			pitches에 "138"을 더한다
	__add__			pitches.add(0,"138");		pitches의 0번 인덱스에 "138"을 더한다
	__get__			pitches.get(1)			pitches의 1번 인덱스를 반환
	__size__			pitches.size()				pitches의 갯수 반환
	__contains__ 		pitches.contains("142")		pitches에 "142"가 있는지 찾는다 // true,false 반환
	__remove__		pitches.remove("129")		pitches에서 "129"를 지우고 true 반환
	__remove__		pitches.remove(0)			pitches의 0번 인덱스 지우고 지워진 값 반환.
	

===== ㅇ 맵(Map) Reperence Type (HashMap, LinkedMap, TreeMap) =====
	
	HashMap<String, String> map = new HashMap<String, String>();
	map.put("people", "사람");
	map.put("baseball", "야구");
	
	__put__		map.put("people", "사람");	map에 키와 밸류를 넣는다.
	__get__		map.get("people")		키를 입력하여 value값을 얻을 수 있다.
	__containsKey__	map.containsKey("people")	people"이라는 키는 존재하는지 확인 true, false 반환
	__remove__		map.remove("people")		"people"에 해당되는 아이템(people:사람)이 삭제된 후 "사람" 반환(key로 item을 지우고 value를 반환)
	__size__		map.size()			Map의 갯수를 리턴한다





