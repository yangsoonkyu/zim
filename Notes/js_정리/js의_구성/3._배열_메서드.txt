Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-07-14T17:03:12+09:00

====== 3. 배열 메서드 ======
Created 토요일 14 7월 2018
https://www.w3schools.com/js/js_array_sort.asp


**배열의 추가 삭제** 
pop() 	fruits.pop()		 마지막 요소를 반환하고 그 요소는배열에서 제거 된다. 
push() 	fruits.push()		 배열의 마지막에 요소를 추가하고 배열길이를 반환
shift()		fruits.shift()		 맨처음 요소를 반환하고 그 요소는 배열에서 제거된다
unshift()	fruits.unshift()	 맨처음에 요소를 추가하고 배열의 길이가 반환된다.


**배열의 요소 변경**
arr[0]="kiwi"		arr의 0번 인덱스가 kiwi로 바뀐다.

**배열의 요소 삭제** 
delete arr[0] 	arr의 0번 인덱스가 undefined로 바뀐다.

**배열 연결하기** 
splice()	arr.splice(0,1,"Lemon","apple")		splice( 위치, 제거될 요소의 숫자, 추가되는요소)
			arr.splice(0,0,"사과")		           0번 인덱스에 사과 추가
			arr.splice(1,2)			           1번 인덱스에서 2개 제거
concat() 	 arr.concat(arr2)				arr+arr2 와 같다 arr.concat(arr2,arr3)도 됨

**배열 자르기**
slice()		arr.sliece(1) 					1번 인덱스부터 잘라서 가져온다.
			arr.slice(1,3)				    1번 인덱스부터 3번인덱스 전까지 가져온다.


**배열을 문자로 바꾸기**
toString()	arr.toString()	


**배열을 확인하는 방법** 
1. toString.call(frutis)
2. Array.isArray(fruits)	(이전 브라우저에서 지원되지 않을때는 isArray함수를 만들어준다)
3. frutis.constructor
4. fruist instanceOf Array

__isArray() 함수__
function isArray(x) {
	return x.constructor.toString().indexOf("Array") > -1;
}


정렬 sort() 는 숫자, 대문자, 소문자, 한글 순으로 정렬이 된다.
숫자가 정렬이 될때 맨 앞의 숫자만 비교하여 정렬되므로 대소구분이 되지 않는다.
ex) 12, 23, 191 -> 12, 191, 23

**sort로 숫자 정렬하기**
arr.sort(function(a,b){return a-b});
arr.sort(function(a,b){return b-a});   // 내림차순 정렬
arr.sort(function(a,b){return 0.5-Math.random()}); // 랜덤정렬

**배열에서 Math.max() 사용**
function myArrayMax(arr) {
	return Math.max.apply(null, arr);
}

**배열에서 Math.min 사용**
function myArrayMin(arr) {
	return Math.min.apply(null, arr);
}


**최대값 최소값 함수 만들기**
function myArrayMax(arr) {
	var len = arr.length
	var max = -Infinity;
	while (len--) {
		if (arr[len] > max) {
			max = arr[len];
		}
	}
	return max;
}





--------------------


concat () 둘 이상의 배열을 조인하고 조인 된 배열의 복사본을 반환합니다.
copyWithin () 배열 내의 배열 요소를 지정한 위치로 복사하거나 지정된 위치에서 복사합니다.
entries () 키 / 값 쌍을 반환합니다. Array Iteration Object
every () 배열의 모든 요소가 테스트를 통과하는지 확인합니다.
fill () 배열의 요소를 정적 값으로 채 웁니다.
filter () 테스트를 통과 한 배열의 모든 요소를 ​​사용하여 새 배열을 만듭니다.
find () 테스트를 통과 한 배열의 첫 번째 요소 값을 반환합니다.
findIndex () 테스트를 통과 한 배열의 첫 번째 요소의 인덱스를 반환합니다.
forEach () 각 배열 요소에 대한 함수를 호출합니다.
from () 객체에서 배열을 만듭니다.
includes () 배열에 지정된 요소가 포함되어 있는지 확인
indexOf () 배열의 요소를 검색해 그 위치를 돌려줍니다.
isArray () 객체가 배열인가 어떤가를 판정합니다.
join () 배열의 모든 요소를 ​​문자열로 조인합니다.
keys () 원의 배열의 키를 포함한 Array Iteration Object를 돌려줍니다.
lastIndexOf () 배열의 요소를 마지막에서 검색하여 그 위치를 반환합니다.
map () 각 배열 요소에 대해 함수를 호출 한 결과로 새 배열을 만듭니다.
pop () 배열의 마지막 요소를 제거하고 그 요소를 반환합니다.
push () 새로운 요소를 배열의 끝에 추가하고 새로운 길이를 반환합니다.
reduce () 배열의 값을 단일 값으로 줄입니다 (왼쪽에서 오른쪽으로).
reduceRight () 배열 값을 단일 값으로 줄입니다 (오른쪽에서 왼쪽으로 이동).
shift () 배열의 첫 번째 요소를 제거하고 그 요소를 반환합니다.
some () 배열의 요소 중 하나라도 테스트를 통과하는지 확인합니다.
sort () 배열 요소를 정렬합니다.
reverse () 배열의 요소 순서를 반대로 바꿉니다. (역방향정렬)
splice () 배열에서 요소를 추가 / 제거합니다.
slice () 배열의 일부를 선택하고 새 배열을 반환합니다.
toString () 배열을 캐릭터 라인으로 변환 해, 결과를 돌려줍니다.
unshift () 새로운 요소를 배열의 처음에 추가하고 새로운 길이를 반환합니다.
valueOf () 배열의 프리미티브 값을 반환합니다.









