Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-07-14T18:51:25+09:00

====== . 0문자열 메서드 ======
Created 토요일 14 7월 2018


**문자열 길이를 반환**
length		txt.length;				문자열의 길이를 반환

 
**문자열에서 문자열 찾기**
indexOf()		str.indexOf("locate")		locate가 시작하는 인덱스 번호를 반환
lastIndexOf()		str.lastIndexOf("locate")		여러개의 locate중에 마지막 locate인덱스번호
	-둘다 찾는 요소가 없으면 -1을 반환하고 두번째 매개변수사용으로 시작위치를 지정할수 있다 ("a",12)
seach()		str.seach("locate")			index와 같고 두번째 매개변수를 사용할수 없다.

**문자열에서 추출하고 자르기**
slice()			str.slice(7,13)				7번 인덱스부터 13번 앞에까지를 가져온다
				str.slice(-12,-6)			-12번부터 -6번 앞까지 가져온다 (-는 뒤에서부터)
				str.slice(7)				7번부터 뒤에까지 쭉 가져온다.
substring()		str.substring(7,13)			slice와 같지만 음수를 사용할수 없다. 
substr()		str.substr(7,6)			7번인덱스부터 6글자를 가져온다.
				str.substr(7)				7번 인덱스부터 뒤로 쭉 가져온다. 
				
**문자열에서 내용 바꾸기** 
replace()		str.replace("apple", "kiwi")		apple을 kiwi로 바꾼다. 
				-apple이 여러개 있어도 첫번째로 일치하는 apple만 바꾼다. 대소문자를 구분한다.
				대소문자를 구분하지 않는 방법: str.replace(/apple/i, "kiwi")  (정규표현식 정규식없음)
				모든 일치항목을 바꾸는 방법 : str.replace(/apple/g, "kiwi")  (정규표현식 전역일치)
toUpperCase()	str.toUpperCase();			대문자로 바꾸기
toLowerCase()	str.toLowerCase();			소문자로 바꾸기 

**두개이상의 문자열 합치기 concat**
	var text1 = "Hello";
	var text2 = "World";
	var text3 = text1.concat(" ", text2);
  var text3= text1+" "+ text2 와 같다.

**문자열을 배열로 변환 split**
	var txt = "a,b,c,d,e";   
	txt.split(",");          // ,를 기준으로 문자를 나눈다
	txt.split(" ");          // 공백을 기준으로  ""로 했을때는 문자열로 반환된다. //a,b,c,d,e
	txt.split("|");          // 파이프 문자를 기준으로    



trim()			str.trim()				문자열의 양쪽 공백 지우기
charAt()		str.charAt(0)				문자열의 0번 인덱스 문자 반환 //H
charCodeAt()	str.charCodeAt(0)			문자열의 0번 인덱스의 유니코드 반환 //72




--------------------
charAt () 지정된 인덱스 (위치)에있는 문자를 반환합니다.
charCodeAt () 지정된 인덱스에있는 문자의 유니 코드를 반환합니다.
concat () 둘 이상의 문자열을 조인하고 새로운 조인 된 문자열을 반환합니다.
endsWith () 문자열이 지정된 문자열 / 문자로 끝나는 지 확인합니다.
fromCharCode () 유니 코드 값을 문자로 변환합니다.
includes () 문자열에 지정된 문자열이 들어 있는지 검사합니다.
indexOf () 문자열에서 지정된 값의 처음 발견 된 위치의 위치를 ​​반환합니다.
lastIndexOf () 문자열에서 지정된 값의 마지막으로 발견 된 항목의 위치를 ​​반환합니다.
localeCompare () 현재 로케일의 두 문자열을 비교합니다.
match () 문자열에서 정규식과 일치하는 항목을 검색하고 일치 항목을 반환합니다.
repeat () 기존 문자열의 지정된 수의 복사본을 가진 새 문자열을 반환합니다.
replace () 문자열에 지정된 값 또는 정규 표현식을 검색하고 지정된 값이 대체되는 새 문자열을 반환합니다.
search () 문자열에 지정된 값 또는 정규 표현식을 검색하고 일치 항목의 위치를 ​​반환합니다.
slice () 문자열의 일부를 추출하여 새 문자열을 반환합니다.
split () 문자열을 부분 문자열의 배열로 나눕니다.
startsWith () 문자열이 지정된 문자로 시작하는지 확인합니다.
substr () 지정된 시작 위치에서 시작하여 지정된 문자 수를 통해 문자열에서 문자를 추출합니다.
substring () 지정된 두 인덱스 사이의 문자열에서 문자를 추출합니다.
toLocaleLowerCase () 호스트 로케일에 따라 문자열을 소문자로 변환합니다.
toLocaleUpperCase () 호스트 로케일에 따라 문자열을 대문자로 변환합니다.
toLowerCase () 문자열을 소문자로 변환합니다.
toString () String 객체의 값을 반환합니다.
toUpperCase () 문자열을 대문자로 변환합니다.
trim () 문자열의 양쪽 끝에서 공백을 제거합니다.
valueOf () String 객체의 프리미티브 값을 반환합니다.


